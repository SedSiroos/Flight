// <auto-generated />
using System;
using Flight.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flight.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20211107163026_AddInventory")]
    partial class AddInventory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Flight.Entity.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Flight.Entity.Domain.AirLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyAirLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(3705),
                            Name = "ملکی ایرلاین"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(4692),
                            Name = "ایران ایر"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(4713),
                            Name = "ماهان"
                        });
                });

            modelBuilder.Entity("Flight.Entity.Domain.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirPlanNames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(6686),
                            Name = "C130"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(7604),
                            Name = "فوکر 100"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 136, DateTimeKind.Local).AddTicks(7624),
                            Name = "هواپیمای تستی"
                        });
                });

            modelBuilder.Entity("Flight.Entity.Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 131, DateTimeKind.Local).AddTicks(7720),
                            Name = "تهران"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 134, DateTimeKind.Local).AddTicks(8370),
                            Name = "مشهد"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 134, DateTimeKind.Local).AddTicks(8416),
                            Name = "رشت"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 11, 7, 20, 0, 25, 134, DateTimeKind.Local).AddTicks(8423),
                            Name = "اهواز"
                        });
                });

            modelBuilder.Entity("Flight.Entity.Domain.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirPlaneNameId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyAirlineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RateClass")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirPlaneNameId");

                    b.HasIndex("CompanyAirlineId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("SourceId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Flight.Entity.Domain.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentCount")
                        .HasColumnType("int");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("Operation")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("SeatsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Flight.Entity.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Flight.Entity.Domain.Flight", b =>
                {
                    b.HasOne("Flight.Entity.Domain.Airplane", "AirPlan")
                        .WithMany()
                        .HasForeignKey("AirPlaneNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight.Entity.Domain.AirLine", "AirLine")
                        .WithMany()
                        .HasForeignKey("CompanyAirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight.Entity.Domain.City", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight.Entity.Domain.City", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirLine");

                    b.Navigation("AirPlan");

                    b.Navigation("Destination");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("Flight.Entity.Domain.Inventory", b =>
                {
                    b.HasOne("Flight.Entity.Domain.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("Flight.Entity.Domain.Order", b =>
                {
                    b.HasOne("Flight.Entity.Domain.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Flight.Entity.Domain.Account", "Account")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Flight");
                });
#pragma warning restore 612, 618
        }
    }
}
